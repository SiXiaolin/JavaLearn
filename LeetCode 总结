LeetCode 总结
1  判断是否是回文数字
   1) 将串反转, 之后看是否与原数字相等
   2）获得一个与数字位数相等的100000，然后每次取最前和最后的两个位作比较.
2 回文字符串
  1） 如果要求忽略大小写的话，先把全部都转化成小写. String.tolowercase()
  2)  处理不在范围内的字符, 可以先处理，也可以在计算的时候直接忽略.
  



tips
1. 数字和字符串的操作
涉及到数字的，一定要考虑0，负数，溢出的情况
涉及到字符串的，考虑的情况.
字符转成数字的，考虑字符在不在数字的范围内
考虑前面的加减号
考虑边界值
在while或者for循环里面写条件的时候，注意一下极限值...可以到极限出去判断一下.


2. 二叉树
检查二叉树是不是null
检查二叉树的左右节点是不是null



2.continue 和 break 的区别
在一个for循环中，如果是break的话，不会继续判断for里面的条件，既不再回到for循环.
continue的话，只是跳过后面的执行语句，转回for循环继续判断和执行.

3.java中的访问控制权限	
类的访问范围
	A、public修饰类，表示该类在所有包中可见
	B、(default)修饰类，表示该类仅在同一个包中可见
	C. private 仅仅能修饰内部类
	不能用protected和private修饰类

成员变量及成员方法的访问范围
	A、public	包内、包外，所有类中可见
	B、protected	包内所有类可见，包外有继承关系的子类可见
	(子类对象可调用)
	C、(default)表示默认，不仅本类访问，而且是同包可见。
	D、private	仅在同一类中可见
	
4.i++,++i的区别
  i++， 表示语句执行结束后 i加1
  ++i, 表示i先加1，之后再执行语句
i=i+1 和 i+=1 的区别
   第一个是简单赋值运算,第二个是复合赋值运算
   复合赋值运算符会将运算结果转型为左边操作数的类型


5 String 和 String Buffer的比较
String是primitive数据类型，是个Final类，不可变，重新赋值的时候实际上是新建了一个类
String Buffer是可变的.用stringbuffer 处理字符串拼接等操作实际上效率更高.


6. 链表操作
   1）链表的插入操作，判断链表是不是null，判断插入的位置是不是第一个.
   2) 往后面找，知道找到i，判断i是不是为节点或超出链表的长度
   3）找到位置之后先处理new的link, 之后再处理前面的以及后面的.

7. null 值尽量在前面处理
   null 可以push 进stack，并且可以取出来...作为一个null值
   但是容易出错...所以尽量在前面处理null.
   
   
